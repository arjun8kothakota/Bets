{"version":3,"sources":["firebase.js","components/Person.js","components/CallWar.js","components/Word.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Person","props","useState","count","setCount","useEffect","ref","child","on","snapshot","val","id","add","type","today","Date","set","date","getMonth","getDate","getFullYear","points","Math","abs","time","getHours","getMinutes","getSeconds","user","name","className","Container","fluid","Row","Col","Button","variant","btnColor","size","onClick","CallWar","lastChanged","setLastChanged","word","md","Word","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","interval","useRef","countDownDate","getTime","setInterval","now","distance","days","floor","hours","minutes","seconds","clearInterval","current","startTimer","App","basename","process","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d45249e0.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyA0_r0w6iQyc3OqVNyUyGuD2im3X3vrpnk\",\n    authDomain: \"who-ended-it.firebaseapp.com\",\n    projectId: \"who-ended-it\",\n    storageBucket: \"who-ended-it.appspot.com\",\n    messagingSenderId: \"675649022701\",\n    appId: \"1:675649022701:web:90c4b9767a529f4ab3bae4\",\n    measurementId: \"G-81KQ85TYZY\"\n}\nconst app = firebase.initializeApp(config)\nexport const db = app.database()\n\nexport default firebase\n","import React, { useState, useEffect } from 'react';\nimport { db } from '../firebase'\n\nimport Button from 'react-bootstrap/Button'\nimport { Container, Row , Col} from 'react-bootstrap'\n\nconst Person = (props) => {\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n        db.ref().child('users').on('value', snapshot => {\n            if (snapshot.val() != null) {\n                setCount(snapshot.val()[props.id][\"count\"])\n            }\n        })\n    }, [])\n\n    const add = (val) => {\n        let type = \"added\"\n        let today = new Date()\n        if (val < 0) {\n            type = \"removed\"\n        }\n        db.ref('users/3').set({\n            date: (today.getMonth()+1) + '/' + today.getDate() + '/' + today.getFullYear(),\n            points: Math.abs(val),\n            time: today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds(),\n            type: type,\n            user: props.name\n        })\n        db.ref('users/' + props.id).set({\n            id: props.id,\n            name: props.name,\n            count: count + val\n        })\n        setCount(count + val)\n    }\n\n    return (\n        <div>\n            <h1 className=\"text-center\">{ props.name }</h1>\n            <h2 className=\"text-center\">{ count }</h2>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <div className=\"flex-parent jc-center\">\n                        <Col>\n                            <Button className=\"block mr-5\" variant={ props.btnColor } size=\"lg\" onClick={() => add(1)}>Add 1</Button>\n                        </Col>\n                        <Col>\n                            <Button className=\"block\" variant={ props.btnColor } size=\"lg\" onClick={() => add(5)}>Add 5</Button>\n                        </Col>\n                    </div>\n                </Row>\n                <Row className=\"justify-content-md-center mt-3\">\n                    <div className=\"flex-parent jc-center\">\n                        <Col>\n                            <Button className=\"block mr-5\" variant={ props.btnColor } size=\"lg\" onClick={() => add(10)}>Add 10</Button>\n                        </Col>\n                        <Col>\n                            <Button className=\"block\" variant={ props.btnColor } size=\"lg\" onClick={() => add(-1)}>Delete</Button>\n                        </Col>\n                    </div>\n                </Row>\n                <Row className=\"justify-content-md-center mt-3\">\n                    <div className=\"flex-parent jc-center\">\n                        <Col>\n                            <Button className=\"block\" variant={ props.btnColor } size=\"lg\" onClick={() => add(-count)}>Clear</Button>\n                        </Col>\n                    </div>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Person","import React, { useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport Person from './Person'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst CallWar = () => {\n    const [lastChanged, setLastChanged] = useState({})\n\n    useEffect(() => {\n        db.ref().child('users').on('value', snapshot => {\n            if (snapshot.val() != null) {\n                setLastChanged(snapshot.val()[\"3\"])\n            }\n        })\n    }, [])\n\n    let word = \"points\"\n\n    if (lastChanged['points'] === 1) {\n        word = \"point\"\n    }\n\n    return (\n        <div className=\"background\">\n            <div className=\"spacing\">\n                <h1 className=\"text-center big\">Who ended the call?</h1>\n                <Container className=\"mt-5\">\n                <Row className=\"justify-content-md-center\">\n                    <Col>\n                        <Person name=\"Arjun\" id=\"1\" btnColor=\"outline-danger\"/>\n                    </Col>\n                    <Col md=\"3\" />\n                    <Col>\n                        <Person name=\"Sneha\" id=\"2\" btnColor=\"outline-primary\"/>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center mt-5\">\n                    <h2>Last edited: { lastChanged['type'] } { lastChanged['points'] } { word } for { lastChanged['user'] } on { lastChanged['date'] } at { lastChanged['time'] } </h2>\n                </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\n\nexport default CallWar","import React, { useRef, useState, useEffect } from 'react'\nimport { db } from '../firebase'\nimport Button from 'react-bootstrap/Button'\n\nconst Word = () => {\n    const [count, setCount] = useState(0)\n    const [timerDays, setTimerDays] = useState(\"00\")\n    const [timerHours, setTimerHours] = useState(\"00\")\n    const [timerMinutes, setTimerMinutes] = useState(\"00\")\n    const [timerSeconds, setTimerSeconds] = useState(\"00\")\n\n    let interval = useRef()\n\n    const startTimer = () => {\n        const countDownDate = new Date(\"December 9, 2021 00:00:00\").getTime()\n        \n        interval = setInterval(() => {\n            const now = new Date().getTime()\n            const distance = countDownDate - now\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24))\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000)\n\n\n            if (distance < 0) {\n                // Stop timer\n                clearInterval(interval.current)\n            } else {\n                // Update timer\n                setTimerDays(days)\n                setTimerHours(hours)\n                setTimerMinutes(minutes)\n                setTimerSeconds(seconds)\n            }\n        }, 1000)\n        \n    }\n\n    const add = () => {\n        if (count < 10) {\n            db.ref('users/' + 4).set({\n                id: 4,\n                name: \"Arjun\",\n                count: count + 1\n            })\n            setCount(count + 1)\n        }\n    }\n\n    const del = () => {\n        if (count > 0) {\n            db.ref('users/' + 4).set({\n                id: 4,\n                name: \"Arjun\",\n                count: count - 1\n            })\n            setCount(count - 1)\n        }\n    }\n\n    useEffect(() => {\n        db.ref().child('users').on('value', snapshot => {\n            if (snapshot.val() != null) {\n                setCount(snapshot.val()[4][\"count\"])\n            }\n        })\n        startTimer()\n        return () => {\n            clearInterval(interval.current)\n        }\n    }, [])\n\n    return (\n        <div className=\"wordBg\">   \n            <h1 className=\"text-center mt-5\">Number of times I can say F*ck:</h1>\n            <h2 className=\"text-center mt-5\">{ count }</h2>\n            <div className=\"flex-parent jc-center mt-5\">\n                <Button className=\"block word-button left-btn\" variant=\"light\" size=\"sm\" onClick={() => add()}>Add</Button>\n                <Button className=\"block word-button\" variant=\"light\" size=\"sm\" onClick={() => del()}>Delete</Button>\n            </div>\n            <section className=\"timer\">\n                <div>\n                    <section>\n                        <p>{ timerDays }</p>\n                        <p><small>Days</small></p>\n                    </section>\n                    <span>:</span>\n                    <section>\n                        <p>{ timerHours }</p>\n                        <p><small>Hours</small></p>\n                    </section>\n                    <span>:</span>\n                    <section>\n                        <p>{ timerMinutes }</p>\n                        <p><small>Minutes</small></p>\n                    </section>\n                    <span>:</span>\n                    <section>\n                        <p>{ timerSeconds }</p>\n                        <p><small>Seconds</small></p>\n                    </section>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default Word","import './App.css';\nimport CallWar from './components/CallWar'\nimport Word from './components/Word'\nimport { Container, Row, Col, Navbar, Nav } from 'react-bootstrap'\nimport {HashRouter as Router, Route, Link} from 'react-router-dom'\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Container className=\"p-0\" fluid={true}>\n          <Navbar className=\"border-bottom\" bg=\"white\" expand=\"lg\">\n            <Navbar.Brand>Bets</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"navbar-toggle\" />\n            <Navbar.Collapse id=\"navbar-toggle\">\n              <Nav className=\"ml-auto\">\n                <Link className=\"nav-link\" to=\"/\">Call War</Link>\n                <Link className=\"nav-link\" to=\"/the-word\">The Word</Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <Route path=\"/\" exact render={() => <CallWar />} />\n          <Route path=\"/the-word\" exact render={() => <Word />} />\n        </Container>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}